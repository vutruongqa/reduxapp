Installing atom.io
Installing git
Installing nodejs

npm init
npm install express@4 --save

node server.js ==> start the server

Component, prop and state
- prop like constant we can't change or update it
- state like a property and we can get/set it

Insall webpack to bundle your web application
- sudo npm install -g webpack@1.12.13
- webpack -h
- npm install --save react@0.14.7 react-dom@0.14.7
- npm install --save-dev webpack@1.12.13 babel-core@6.5.1  babel-loader@6.2.2 babel-preset-es2015@6.5.0 babel-preset-react@6.5.0
- pay attention at webpack.config.js

**NOTES: In case you delete the node_modules folder, rerun npm install to reinstall this folder


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Document</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.7/react-dom.js"></script>
</head>
<body>
    <div id="app">
        <script type="text/babel" src="app.jsx">
        </script>
    </div>
</body>
</html>


--------
Run webpack command to bundle the application
$webpack ./public/app.js ./public/bundle.js
Hash: e884180445a36752b778
Version: webpack 1.12.13


--------
webpack -w => that will run webpack in the background so you don't need to rerun it again

-----------------

Fix some issue by upgrading npm by these command
npm i -g npm-check-updates
npm-check-updates -u
npm install

--------------
Installing babel stage 0 to support ES6 script
http://babeljs.io/docs/plugins/preset-stage-0/

----------------------
Routing in SPA application
Installing react router

npm install react-router@2.0.0 --save


-----------------

Installing axios support api calling

npm install axios --save

-------------------
Installing react developer tool in google chrome extension
------
Add this to webpack for debugging with the original code
 devtool:'cheap-module-eval-source-map'


----------------------
Arrow function like lambda expression in C#
e.g:   var add = (a,b) => {
            return a + b;
       }
or var add = (a,b) => a + b;

---------------------------
Stateless functional component

var About = (props) => {
        return (
            <h1>About component</h1>
        )
};


--------------------------------
Install heroku
install heroku cli

heroku login
heroku auth:whoami to verify

iN Package.json
add this in the script section to make heroku understand it  "start":"node server.js"  

in SERVER.JS, set the port like this because heroku does not always work in port 3000
var port = process.env.PORT || 3000;

heroku create

git push heroku master

//handle http and https case because Heroku only process http request
app.use(function(req,res,next){
    if(req.headers['x-forwarded-proto'] === 'https'){
        res.redirect('http://' + req.hostname + req.url);
    }
    else{
         next();
    }
});

---------------------------------------------------
Installing Foundation for the CSS decoration

npm install css-loader@0.23.1 script-loader@0.6.1 style-loader@0.13.0 jquery@2.2.1 foundation-sites@6.2.0 --save-dev

---------------------------------------------------

Installing SASS, SCSS
npm install sass-loader@3.1.2 node-sass@3.4.2 --save-dev

-----------------------------------------------------
Pure function
don't change value of the input function

Example about pure function that 

function changeProp(obj){
    return {
    ...obj,
    name:'Jen'
    };
}

function changeProp2(obj){
    obj.name ='Andrew';
    return obj;
}
 
The first function is calling pure function because when we call
var startingValue = {
    name: 'Andrew',
    age:25
}

var res = changeProp(startingValue);
console.log(startingValue);
console.log(res);

The value of startingValue is still remain;
Pure function is very important in Redux
The function should be synchronous, not async




